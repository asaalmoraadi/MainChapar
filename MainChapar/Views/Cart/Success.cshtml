@{
    ViewData["Title"] = "ثبت موفق";
}
@{
    Layout = "~/Views/Shared/_newLayout1.cshtml";
}

<!-------------------------------->
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="~/assets/succes/styles.css">
    <title>سفارش موفق</title>

</head>
<h1 id="title">سفارش شما با موفقیت ثبت شد</h1>

<div class="tracking-code">
    <p id="tracking-code title">کد پیگیری : </p>
    <p id="tracking-code code"> <strong>@ViewBag.RequestId</strong> </p>
</div>

<div class="information">

    <p>QR کد برای  دریافت حضوری سفارش :</p>
    <!-- نمایش کد QR -->
    <div id="qr-container">
        @Html.Raw(ViewBag.QrCode)
    </div>
    <button onclick="downloadQR()">دانلود کد QR</button>
    <p>لطفا این کد را هنگام مراجعه حضوری ارائه دهید .</p>

</div>




<!------------------------------------------------------->

<script>
    // -----------------------------
    // دانلود QR Code به صورت فایل SVG
    // -----------------------------
    function downloadQR() {
        // گرفتن عنصر SVG داخل کانتینر QR
        const svgElement = document.querySelector('#qr-container svg');

        // تبدیل عنصر SVG به رشته متنی (Text)
        const svgData = new XMLSerializer().serializeToString(svgElement);

        // ایجاد Blob موقتی برای نگه‌داری داده در مرورگر
        const blob = new Blob([svgData], { type: "image/svg+xml;charset=utf-8" });
        const url = URL.createObjectURL(blob);

        // ساخت لینک موقتی و دانلود خودکار فایل
        const link = document.createElement('a');
        link.href = url;
        link.download = "QRCode.svg"; // نام فایل دانلودی
        document.body.appendChild(link);
        link.click(); // شبیه‌سازی کلیک روی لینک
        document.body.removeChild(link);

        // آزاد کردن حافظه موقت ایجاد شده برای URL
        URL.revokeObjectURL(url);
    }
</script>


